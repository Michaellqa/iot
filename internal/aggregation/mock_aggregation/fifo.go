// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/micky/Documents/playground/go/iot/internal/aggregation/fifo.go

// Package mock_aggregation is a generated GoMock package.
package mock_aggregation

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockFifo is a mock of Fifo interface
type MockFifo struct {
	ctrl     *gomock.Controller
	recorder *MockFifoMockRecorder
}

// MockFifoMockRecorder is the mock recorder for MockFifo
type MockFifoMockRecorder struct {
	mock *MockFifo
}

// NewMockFifo creates a new mock instance
func NewMockFifo(ctrl *gomock.Controller) *MockFifo {
	mock := &MockFifo{ctrl: ctrl}
	mock.recorder = &MockFifoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFifo) EXPECT() *MockFifoMockRecorder {
	return m.recorder
}

// Add mocks base method
func (m *MockFifo) Add(arg0 interface{}) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Add", arg0)
}

// Add indicates an expected call of Add
func (mr *MockFifoMockRecorder) Add(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockFifo)(nil).Add), arg0)
}

// Get mocks base method
func (m *MockFifo) Get() interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].(interface{})
	return ret0
}

// Get indicates an expected call of Get
func (mr *MockFifoMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockFifo)(nil).Get))
}

// Len mocks base method
func (m *MockFifo) Len() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Len")
	ret0, _ := ret[0].(int)
	return ret0
}

// Len indicates an expected call of Len
func (mr *MockFifoMockRecorder) Len() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Len", reflect.TypeOf((*MockFifo)(nil).Len))
}
